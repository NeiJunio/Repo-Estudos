-- 24/02/2025 -- 

    -> Objeto combina dados/atributos e comportamentos/funções/métodos

## HERANÇA  -------------------------------------------------
    -> Reutilização de código
    -> Serve para especificar (puxa as informações de uma classe genérica, e detalha para especificar)
    - exemplo:
    	classe generica: veículo (nome, cor, marca)
    	classe especifica vinda por meio da herança: carro (gol, prata, 2010)

    	public class Carro: Veiculo
    	{
    	 // significa que a classe Carro é uma classe que herda estrutura da classe Veiculo
    	}


## ENCAPSULAMENTO  ------------------------------------------
    -> Controlar o acesso tanto dos atributos/dados quanto comportamentos/funções
    -> Controla por meio da definição de modificadores de acesso: public, internal, private, protected
    	Modificadores:
    	- classe public: fica acessível em diferentes projetos
    	- classe internal: somente acessíveis por outras classes dentro do mesmo projeto
    
    	Métodos (só pode usar em funções ou dados/variáveis):
    	- private: somente a propria classe que pode ter acesso
    	- protected: somente a classe que tem esse atributo pode enxergar, utilizar, e tbm as classe filhas (que possuem herança nessa classe)


## ABSTRAÇÃO  -----------------------------------------------
    -> Analisa o que é essencial, sem se preocupar com detalhes
    -> Força as classes filhas a implementar e especificar determinados métodos, deixando pra trás a "abstração" ou falta de detalhamento


## POLIMORFISMO  --------------------------------------------
    -> Várias formas
    -> Chama e utiza parâmetros que tem uma determinada herança com a função específica determinada
